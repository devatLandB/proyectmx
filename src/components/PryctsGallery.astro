---
const { images } = Astro.props;

interface Image {
  src: string;
  alt: string;
}
---

<style>
  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(85, 85, 85, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s, opacity 0.3s ease-in-out;
  }

  .overlay.visible {
    visibility: visible;
    opacity: 1;
  }

  .overlay img {
    max-width: 90%;
    max-height: 90%;
  }
</style>

<div class="grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-4 gap-4 px-4 md:px-0">
  {images.map((image: Image, index: number) => (
    <div class="cursor-pointer image-thumbnail border border-pryctgray  transition-all hover:contrast-50" data-src={image.src}>
      <img src={image.src} alt={image.alt} class="w-full h-36 object-cover" />
    </div>
  ))}
</div>

<div id="image-popup" class="overlay">
  <img id="popup-image" src="" alt="Popup Image" />
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const thumbnails = document.querySelectorAll('.image-thumbnail');
    const popup = document.getElementById('image-popup');
    const popupImage = document.getElementById('popup-image') as HTMLImageElement | null;

    const openPopup = (src: string) => {
      if (popupImage && popup) {
        popupImage.src = src;
        popup.classList.add('visible');
      }
    };

    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', (event: Event) => {
        const src = (event.currentTarget as HTMLElement).getAttribute('data-src');
        if (src) {
          openPopup(src);
        }
      });
    });

    popup?.addEventListener('click', () => {
      popup?.classList.remove('visible');
    });
  });
</script>
